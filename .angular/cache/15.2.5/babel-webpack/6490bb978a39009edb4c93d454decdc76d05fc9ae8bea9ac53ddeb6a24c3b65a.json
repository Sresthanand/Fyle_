{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs';\nimport { SearchService } from '../../core/services/search.service';\nlet HomeComponent = class HomeComponent {\n  constructor(searchService) {\n    this.searchService = searchService;\n    // Define a cache object to store API responses\n    this.cache = {};\n    this.searchResultBooks = [];\n    this.currentPage = 1; // Current page\n    this.totalPages = 1; // Total number of pages\n    this.totalEntries = 0; // Total number of entries in the search results\n    this.pageSize = 10; // Number of items per page\n    this.pagesArray = []; // Define and initialize pagesArray as an array of numbers\n    this.isLoading = false; // Add isLoading variable to track loading state\n    this.trendingSubjects = [{\n      name: 'JavaScript'\n    }, {\n      name: 'CSS'\n    }, {\n      name: 'HTML'\n    }, {\n      name: 'Harry Potter'\n    }, {\n      name: 'Crypto'\n    }];\n    this.bookSearch = new FormControl('');\n  }\n  calculateRange() {\n    const startIndex = (this.currentPage - 1) * this.pageSize + 1;\n    const endIndex = Math.min(this.currentPage * this.pageSize, this.totalEntries);\n    return `${startIndex} to ${endIndex} of ${this.totalEntries}`;\n  }\n  ngOnInit() {\n    this.bookSearch.valueChanges.pipe(debounceTime(300)).subscribe(value => {\n      this.searchBooks(value, this.pageSize, this.currentPage);\n    });\n    this.searchBooks('', this.pageSize, this.currentPage);\n  }\n  changePageSize(action) {\n    if (action === 'up' && this.pageSize < 10) {\n      this.pageSize += 1;\n    } else if (action === 'down' && this.pageSize > 1) {\n      this.pageSize -= 1;\n    }\n    this.searchBooks(this.bookSearch.value, this.pageSize, this.currentPage);\n  }\n  searchBooks(query, limit, page = 1) {\n    this.isLoading = true;\n    const offset = (page - 1) * this.pageSize;\n    query = this.bookSearch.value ? this.bookSearch.value : null;\n    const cacheKey = `${query}_${limit}_${offset}`;\n    if (this.cache[cacheKey]) {\n      this.searchResultBooks = this.cache[cacheKey];\n      this.isLoading = false;\n    } else {\n      this.searchService.searchBooks(query, limit, offset).subscribe(data => {\n        this.searchResultBooks = data?.docs;\n        this.totalEntries = data?.numFound;\n        this.currentPage = page;\n        this.totalPages = Math.ceil(data?.numFound / this.pageSize);\n        this.pagesArray = Array.from({\n          length: Math.min(5, this.totalPages)\n        }, (_, i) => i + 1);\n        this.isLoading = false;\n        // Cache the response\n        this.cache[cacheKey] = this.searchResultBooks;\n      });\n    }\n  }\n  clearSearch() {\n    this.bookSearch.setValue('');\n  }\n  goToPreviousPage() {\n    if (this.currentPage > 1) {\n      this.searchBooks(this.bookSearch.value, this.pageSize, this.currentPage - 1);\n    }\n  }\n  goToNextPage() {\n    if (this.currentPage < this.totalPages) {\n      this.searchBooks(this.bookSearch.value, this.pageSize, this.currentPage + 1);\n    }\n  }\n  goToPage(page) {\n    if (page > 0 && page <= this.totalPages) {\n      this.searchBooks(this.bookSearch.value, this.pageSize, page);\n    }\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'front-end-internship-assignment-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n}), __metadata(\"design:paramtypes\", [SearchService])], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","debounceTime","SearchService","HomeComponent","constructor","searchService","name","bookSearch","calculateRange","startIndex","currentPage","pageSize","endIndex","Math","min","totalEntries","ngOnInit","valueChanges","pipe","subscribe","value","searchBooks","changePageSize","action","query","limit","page","isLoading","offset","cacheKey","cache","searchResultBooks","data","docs","numFound","totalPages","ceil","pagesArray","Array","from","length","_","i","clearSearch","setValue","goToPreviousPage","goToNextPage","goToPage","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\SRESTH\\Desktop\\Fyle_\\Fyle_\\src\\app\\components\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, filter } from 'rxjs';\r\n\r\nimport { SearchService } from '../../core/services/search.service';\r\nimport { SearchBook } from 'src/app/core/models/search-book-response.model';\r\n\r\n@Component({\r\n  selector: 'front-end-internship-assignment-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n   // Define a cache object to store API responses\r\n  private cache: { [key: string]: SearchBook[] } = {};\r\n\r\n\r\n  bookSearch: FormControl;\r\n  searchResultBooks: SearchBook[] = [];\r\n\r\n  currentPage: number = 1; // Current page\r\n  totalPages: number = 1; // Total number of pages\r\n\r\n  totalEntries: number = 0; // Total number of entries in the search results\r\n\r\n\r\n  pageSize: number = 10; // Number of items per page\r\n  pagesArray: number[] = []; // Define and initialize pagesArray as an array of numbers\r\n\r\n  isLoading: boolean = false; // Add isLoading variable to track loading state\r\n\r\n  constructor(private searchService: SearchService) {\r\n    this.bookSearch = new FormControl('');\r\n  }\r\n\r\n\r\n  trendingSubjects: Array<any> = [\r\n    { name: 'JavaScript' },\r\n    { name: 'CSS' },\r\n    { name: 'HTML' },\r\n    { name: 'Harry Potter' },\r\n    { name: 'Crypto' },\r\n  ];\r\n\r\n\r\n  calculateRange(): string {\r\n    const startIndex = (this.currentPage - 1) * this.pageSize + 1;\r\n    const endIndex = Math.min(this.currentPage * this.pageSize, this.totalEntries);\r\n    return `${startIndex} to ${endIndex} of ${this.totalEntries}`;\r\n  }\r\n  ngOnInit(): void {\r\n   \r\n    this.bookSearch.valueChanges.pipe(debounceTime(300)).subscribe((value: string) => {\r\n        this.searchBooks(value, this.pageSize, this.currentPage);\r\n    });\r\n    this.searchBooks('', this.pageSize, this.currentPage);\r\n}\r\n\r\n\r\n  changePageSize(action: string) {\r\n    if (action === 'up' && this.pageSize < 10) {\r\n      this.pageSize += 1;\r\n    } else if (action === 'down' && this.pageSize > 1) {\r\n      this.pageSize -= 1;\r\n    }\r\n    this.searchBooks(this.bookSearch.value, this.pageSize, this.currentPage);\r\n  }\r\n  \r\n  searchBooks(query: string, limit: number, page: number = 1) {\r\n    this.isLoading = true;\r\n\r\n    const offset = (page - 1) * this.pageSize;\r\n    query = this.bookSearch.value ? this.bookSearch.value : null;\r\n\r\n   \r\n    const cacheKey = `${query}_${limit}_${offset}`;\r\n    if (this.cache[cacheKey]) {\r\n      this.searchResultBooks = this.cache[cacheKey];\r\n      this.isLoading = false;\r\n    } else {\r\n      this.searchService.searchBooks(query, limit, offset).subscribe((data) => {\r\n        this.searchResultBooks = data?.docs;\r\n        this.totalEntries = data?.numFound;\r\n        this.currentPage = page;\r\n        this.totalPages = Math.ceil(data?.numFound / this.pageSize);\r\n        this.pagesArray = Array.from({ length: Math.min(5, this.totalPages) }, (_, i) => i + 1);\r\n        this.isLoading = false;\r\n\r\n        // Cache the response\r\n        this.cache[cacheKey] = this.searchResultBooks;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\nclearSearch() {\r\n  this.bookSearch.setValue('');\r\n}\r\n\r\n  goToPreviousPage() {\r\n    if (this.currentPage > 1) {\r\n      this.searchBooks(this.bookSearch.value, this.pageSize, this.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  goToNextPage() {\r\n    if (this.currentPage < this.totalPages) {\r\n      this.searchBooks(this.bookSearch.value, this.pageSize, this.currentPage + 1);\r\n    }\r\n  }\r\n\r\n  goToPage(page: number) {\r\n    if (page > 0 && page <= this.totalPages) {\r\n      this.searchBooks(this.bookSearch.value, this.pageSize, page);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}